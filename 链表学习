#include<iostream>
using namespace std;
typedef struct LNode
{
	int Data;
	struct LNode*  next;
}LNode,*LinkList;

LinkList InitLinklist()
{
	struct LNode* L = (struct LNode*)new LNode*;
	L->next = NULL;
	struct LNode* q = L;
	int i = 0;
	cin >> i;
	while (i != 999)
	{
		struct LNode* p = (struct LNode*)new LNode*;
		p->Data = i;
		p->next = q->next;
		q->next = p;
		q = p;
		cin >> i;


	}
	return  L;
}

void  Printlist(LinkList & L)
{
	LinkList t;
	t = L->next;
	while (t != NULL)
	{
		cout << t->Data << " ";
		t = t->next;

	}


}


void findlist(LinkList& L, int  j)
{
	LinkList t;
	t = L;
	for (int i = 0; i < j; i++)
	{
		
		t = t->next;

	}
	if (t != NULL)
	{
		cout << t->Data << endl;

	}
	else
	{
		cout << "Խ��" << endl;
	}

}
void dellist(LinkList  &L,int  i){
	LinkList  t = L;
	for (int j = 0; j < i-1; j++){
		t = t->next;
	}
	LinkList  q = t->next;
	t->next = q->next;
	free(q);
	
}





int main()
{
	cout << "���뼸����" << endl;

	LinkList L = InitLinklist();
	Printlist(L);
	cout << "���ҵڼ�����" << endl;
	int i = 0;
	cin >> i;
	findlist( L,   i);
	cout << "ɾ���ڼ�����" << endl;
	int o = 0;
	cin >> o;
	dellist(L, o);
	Printlist(L);


	system("pause");
	return 0;
}
